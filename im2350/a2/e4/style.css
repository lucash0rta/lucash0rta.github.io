*{
  box-sizing: border-box;
  background-origin: border-box;
  margin: 0;
}

@font-face {
  font-family: 'digital-clock-font';
  src: url(/lcd-calculator-display-tight-7-segment/lcd-calculator-display-tight-7-segment.ttf);
}
/* Basis for colour palette comes from 1bit Monitor Glow Palette by Polyducks */
/* https://lospec.com/palette-list/1bit-monitor-glow */
/* you're welcome to change the colours if you want or any of the other general page style */
:root{
  --col-01:#222323;
  --col-02:#f0f6f0;
  --col-03:#5252ff;
  --col-04:#b6e878;
  --col-05:#bcbdbc;
  --col-06:#6f6f6f;
  --border: 1px solid var(--col-02);
}

body{
  background-color: #313131;
  color: rgb(192, 255, 202);
  height: 100vh;
  font-family: 'digital-clock-font';
  font-size: 1.5em;
}

.audio-player-wrapper{
  display: flex;
  flex-direction: column;
  width: 60%;
  max-width: 800px;
  min-width: 650px;
  margin: 0 auto;
  overflow: hidden;
}

/* becuase I want to overlay the play icon on the audio they need to be in their own wrapper */
.audio-element-wrapper{
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  max-width: 70%;
}

#audioElement{
  width: 100%;
  grid-column: 1/2;
  grid-row: 1/2;
}

#heroImage{
  width: 100%;
  grid-column: 1/2;
  grid-row: 1/2;
  border-radius: 50000px;
}

#audioPlayOverlay{
  width: 8rem;
  height: 8rem;
  grid-column: 1/-1;
  grid-row: 1/-1;
  justify-self: center;
  align-self: center;
  opacity: 0.6;
  pointer-events: none;
  display: none;
  filter: blur(5px);
  z-index: 4;
}

.audio-controls-wrapper{
  display: flex;
  justify-content: center;
}
/* this overwrites the above display:flex - something which is then undone when the JS loads */
#controlsWrapper{
  display: none;
}

.audio-control-button{
  width: 2rem;
  height: 2rem;
  padding: .1rem;
  border: none;
  cursor: pointer;
  background-size: contain;
  
}
.audio-control-button:hover{
  background-color: var(--col-05);
}
.audio-control-button:active{
  background-color: var(--col-06);
}
.button-icon{
  pointer-events: none;
}

#playButton{
  background-image: url('play.png');
  z-index: 5;
  grid-column: 5 / 7;
  grid-row: 17 / 18;
  align-self: top;
  display: block;
  margin-left: auto;
  margin-right: auto;
  transform: translateY(7px);
}

#muteButton{
  background-image: url('unmute.png');
  z-index: 5;
  grid-column: 4 / 5;
  grid-row: 16 / 18;
  align-self: center;
  display: block;
  margin-left: auto;
  margin-right: 0;
  transform: translate(-5px, 2px);
}

.audio-progress-bar{
  /* Reset the default appearance */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  height: 0.5rem;
  flex-grow: 1;
  cursor: pointer;
  background-color: rgb(255, 255, 255);
  opacity: 5%;
  box-shadow: 0 2px 3px var(--col-02) inset;
  width: 100%;
}

.progressCircle{
  position: relative;
  width: 13px;
  height: 30px;
  background-image: url("progress9.png");
  border-radius: 500px;
  top: -15px;
  background-size: contain;
  /* setting the pointer event so that you can still click the prog bar  */
  pointer-events: none;
  color: rgb(20, 20, 20);
  filter: drop-shadow(0 0 0.2rem rgb(25, 25, 25));
}


/*  Getting rid of the below css to have the same style across browsers  */
 ::-moz-progress-bar {
  background-color: white;
  opacity: 0%;
}

::-webkit-progress-bar {
  background-color: var(--col-01);
  opacity: 0%;
  box-shadow: 0 1px 2px var(--col-02) inset;
}
::-webkit-progress-value {
  background-color: rgb(255, 66, 66);
}


.timeline-loading{
  background-image: -moz-repeating-linear-gradient(45deg, var(--col-03) 0% 2%, transparent 2% 4%, red 4%);
  background-size: 200% 100%;
  animation: loadingAnimation 4s linear infinite;
}

.containerForProgress{
  width: 85%;
  height: auto;
  align-self: top;
grid-column: 6/13;
grid-row: 16 / span 17 ;
z-index: 5;
display: block;
margin-left: auto;
margin-right: auto;
pointer-events: all;
transform: translateY(-23px);
}

.rotateDisk {
  width: 80%;
  height: auto; /* Use 'auto' for proportional height based on the image aspect ratio */
  animation: rotation 7s infinite linear;
  /* setting initial animation state to paused so that the disk doesnt turn until play is pressed*/
  animation-play-state: paused;
  /* pointer-events: none; */
  padding: 10%;
  grid-column: 1/-1;
  grid-row: 8/9;
  z-index: 2;
  align-self: center;
  display: block;
  margin-left: auto;
  margin-right: auto;
  pointer-events: all;
}


.contentHolder{
  display: grid;
  grid-template-columns: repeat(15, 1fr);
  grid-template-rows: repeat(20, 1fr);
  width: 100%;
}

.mediaPlayerOvertop, .mediaPlayerBase, .rotateDisk{
  grid-row: 1/-1;
}

.grid-item {
  border: 1px solid black; /* Add a border to grid items */
  padding: 10px; /* Add some padding for spacing within grid items */
  text-align: center; /* Center content within grid items */
  z-index: 3;
}

.mediaPlayerBase{
  grid-column: 1/-1;
  width: 100%;
}
.mediaPlayerOvertop{
  grid-column: 1/-1;
  width: 100%;
  z-index: 3;
  pointer-events: none;
}

.currentLengthInt{
  grid-column: 4 / 6;
  grid-row: 4 / 6;
  align-self: center;
  z-index: 5;
  display: block;
  margin-left: auto;
  margin-right: auto;
  pointer-events: all;
  transform: translateY(-5px);
}
.totalLengthInt{
  grid-column: 11 / 13;
  grid-row: 4 / 6;
  align-self: center;
  z-index: 5;
  display: block;
  margin-left: auto;
  margin-right: auto;
  pointer-events: all;
  transform: translateY(-5px);
}



@keyframes loadingAnimation {
  100%{
    background-position: 50% 0%;
  }
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}